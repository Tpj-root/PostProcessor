function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("Farley Rapier post processor\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("For Farley Rapier profiling machines\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Modal G-codes and coordinates\n")
   ctrl:AppendText("Comments enclosed with ( and )\n")
   ctrl:AppendText("M77/M79 turn the torch on/off\n")
   ctrl:AppendText("Incremental IJ\n")
   ctrl:AppendText("If you use a drill tool then the post ouputs G82 drilling cycle\n")
end


--   created 26/10/09
--   Based on Mach3.scpost



function OnInit()

   post.SetCommentChars ("()", "[]")  --make sure ( and ) characters do not appear in system text
   post.Text ("(Filename: ", fileName, ")\n")
   post.Text ("(Post processor: ", postName, ")\n")
   post.Text ("(Date: ", date, ")\n")
   if(scale == metric) then
      post.Text ("G71 (Units: Metric)\n") --metric mode
      numFormat = "0.00"
   else
      post.Text ("G70 (Units: Inches)\n") --inch mode
      numFormat = "0.000"
   end
   post.Text ("G90 G40\n")
   bigArcs = 1 --stitch arc segments together
   minArcSize = 0.05 --arcs smaller than this are converted to moves
   coolant = 0
end



function OnFinish()
   post.Text ("T00\nM02\n")
end

function OnRapid()
   if(math.hypot(endX - currentX, endY - currentY) < 0.0001) then return end
   if(endX >= 1e17 and endY >= 1e17) then return end
   post.Text ("G00")
   if(endX < 1e17) then
      post.NonModalNumber ("X", endX * scale, numFormat)
   end
   if(endY < 1e17) then
      post.NonModalNumber ("Y", endY * scale, numFormat)
   end
   post.Eol()
end

function OnMove()
   if(math.hypot(endX - currentX, endY - currentY) < 0.0001) then return end
   post.Text ("G01")
   post.NonModalNumber ("X", endX * scale, numFormat)
   post.NonModalNumber ("Y", endY * scale, numFormat)
   post.Eol()
end

function OnArc()
   if(arcAngle <0) then
      post.Text ("G03")
   else
      post.Text ("G02")
   end
   post.NonModalNumber ("X", endX * scale, numFormat)
   post.NonModalNumber ("Y", endY * scale, numFormat)
   post.Text ("I")
   post.Number ((arcCentreX - currentX) * scale, numFormat)
   post.Text ("J")
   post.Number ((arcCentreY - currentY) * scale, numFormat)
   post.Eol()
end


function OnSetFeed()
   post.ModalNumber ("F", feedRate * scale, "0.0###")
   post.Eol()
end

function OnPenDown()
   post.Text ("M77\n")
end


function OnPenUp()
   post.Text ("M79\n")
end


function OnNewOperation()
   post.Text ("(Operation: ", operationName, ")\n")
   if (feedRate <= 0) then
      post.Warning("WARNING: Feed rate is zero")
   end
end

function OnComment()
  post.Text("(",commentText,")\n")
end

function OnToolChange()
   post.Text ("T")
   post.Number (tool, "00")
   post.Text ("  (", toolName, ")\n")
end

function OnNewPart()
   post.Text("(Part: ",partName,")\n");
end

function OnFloodOn()
   coolant = 1
end

function OnFloodOff()
   coolant = 0
end

function OnDrill()
   if(toolClass == "DrillTool") then
      OnRapid()
      post.Text("G82 A")
      post.Number(spindleSpeed * spindleDir, "0")
      post.Text(" B")
      post.Number((feedRate / spindleSpeed) * scale, "0.0###")
      post.Text(" C")
      post.Number(-drillZ * scale, "0.0###")
      post.Text(" D0 ")
      if(-drillZ >= drillPeck) then --use pecking
         post.Text("E1 F")
         post.Number(drillPeck * scale,"0.0###")
         post.Text(" ")
      else
         post.Text("E0 ")
      end
      post.Text(" G" .. coolant .. "\n")
      return
   end


   OnRapid()
   OnPenDown()
   endZ = drillZ
   OnMove()
   OnPenUp()
   endZ = safeZ
   OnRapid()
end
