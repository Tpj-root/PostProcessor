function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("Quickstep post processor\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Min spec g-code for compatibility with as many controllers as possible\n")
   ctrl:AppendText("Non modal G-codes\n")
   ctrl:AppendText("Modal coordinates\n")
   ctrl:AppendText("No comments\n")
   ctrl:AppendText("Incremental IJ\n")
   ctrl:AppendText("G-codes used:\n")
   ctrl:AppendText("G00,G01,G02,G03,G17\n")
   ctrl:AppendText("M-codes used:\n")
   ctrl:AppendText("M03,M04,M05,M07,M08,M09\n")
end




--  revision 3/2/07
--  Removed final safety move. This is now done in SheetCam

--   Created 19/10/2004
--   based on Mach2.post


function OnInit()
   lineNumber = 10
   post.SetCommentChars ("()", "[]")  --make sure ( and ) characters do not appear in system text
--   if(scale == metric) then
--      text (" G21\n") --metric mode
--   else
--      text (" G20\n") --inch mode
--   end
   post.Text (" G17\n") --XY plane
   bigarcs = 1 --stitch arc segments together
   minArcSize = 0.05 --arcs smaller than this are converted to moves
end

function OnNewLine()
   post.Text ("N")
   post.Number (lineNumber, "0000")
   lineNumber = lineNumber + 10
end


function OnFinish()
   post.Text (" M07\n M30\n")
end

function OnRapid()
   if(math.abs(endZ - currentZ) <0.001 and math.abs(endX - currentX) < 0.001 and math.abs(endY - currentY) <0.001) then return end
   post.Text (" G00")
   post.NonModalNumber (" X", endX * scale, "0.0000")
   post.NonModalNumber (" Y", endY * scale, "0.0000")
   post.NonModalNumber (" Z", endZ * scale, "0.0000")
   post.Eol()
end

function OnMove()
   post.Text (" G01")
   post.NonModalNumber (" X", endX * scale, "0.0000")
   post.NonModalNumber (" Y", endY * scale, "0.0000")
   post.NonModalNumber (" Z", endZ * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.###")
   post.Eol()
end

function OnArc()
   if(arcAngle <0) then
      post.Text (" G03")
   else
      post.Text (" G02")
   end
   post.NonModalNumber (" X", endX * scale, "0.0000")
   post.NonModalNumber (" Y", endY * scale, "0.0000")
   post.Text (" I")
   post.Number ((arcCentreX - currentX) * scale, "0.0000")
   post.Text (" J")
   post.Number ((arcCentreY - currentY) * scale, "0.0000")
   post.NonModalNumber (" Z", endZ * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.0###")
   post.Eol()
end

function OnPenDown()
   if (preheat > 0.001) then
      post.Text (" G00")
      post.NonModalNumber (" Z", cutHeight * scale, "0.0000")
      post.Text ("\n G04 sec=")
      post.Number (preheat,"0.###")
      post.Eol()
   end
   post.Text (" G00")
   post.NonModalNumber (" Z", pierceHeight * scale, "0.0000")
   post.Text ("\n M09\n")
   if (pierceDelay > 0.001) then
      post.Text (" G04 sec=")
      post.Number (pierceDelay,"0.###")
      post.Eol()
   end
end


function OnPenUp()
   post.Text (" M07\n")
   if (endDelay > 0) then
      post.Text (" G04 sec=")
      post.Number (endDelay,"0.###")
      post.Eol()
   end
end


function OnToolChange()
   if (plungeRate <= 0) then
      post.Warning("WARNING: Plunge rate is zero")
   end
   if (feedRate <= 0) then
      post.Warning("WARNING: Feed rate is zero")
   end
end



function OnDrill()
   OnRapid()
   OnPenDown()
   endZ = drillZ
   OnMove()
   OnPenUp()
   endZ = safeZ
   OnRapid()
end
