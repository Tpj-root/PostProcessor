function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("Dynatorch post processor\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Designed for use with machine having fully automatic thc\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Non modal G-codes and coordinates\n")
   ctrl:AppendText("Comments enclosed with ( and )\n")
   ctrl:AppendText("G23/G25 turn the plasma torch on/off\n")
   ctrl:AppendText("M04/M05 turn the oxy-fuel torch on/off\n")
   ctrl:AppendText("M60/M61 turn the plate marker on/off\n")
   ctrl:AppendText("M08/M09 lower/raise the scriber\n")
   ctrl:AppendText("Setting the feed and plunge rate to 0 disables feed rates\n")
   ctrl:AppendText("Incremental IJ\n")
end


--  revision 3/2/07
--  Removed final safety move. This is now done in SheetCam

-- revision 2/12/09
-- Added plate marker


function OnInit()
   lineNumber = 10
   post.SetCommentChars ("()", "[]")  --make sure ( and ) characters do not appear in system text
   post.Text (" (Filename: ", fileName, ")\n")
   post.Text (" (Post processor: ", postName, ")\n")
   post.Text (" (Date: ", date, ")\n")
   if(scale == metric) then
      post.Text (" G21 (Units: Metric)\n") --metric mode
   else
      post.Text (" G20 (Units: Inches)\n") --inch mode
   end
   post.Text (" G90\n G17\n")
   bigArcs = 1 --stitch arc segments together
   minArcSize = 0.2 --arcs smaller than this are converted to moves
   oldfeed = -1
   lasttoolClass = ""
   markerChanged = false
end

function OnNewLine()
   post.Text ("N")
   post.Number (lineNumber, "0000")
   lineNumber = lineNumber + 10
end


function OnFinish()
   if(toolClass == "MarkerTool") then
      toolClass = ""
      OnToolChange()
   end
   post.Text (" G25\n M30\n")
end

function OnRapid2()
---text(currentx," ",currenty," ",endx," ",endy)
--   if (math.hypot(endX - currentX, endY - currentY) < 0.001) then return end
   if(endX > 1e17 and endX > 1e17) then return end
   CheckFeed()
   post.Text (" G00")
   if(endX < 1e17) then
      post.NonModalNumber (" X", endX * scale, "0.0000")
   end
   if(endY < 1e17) then
      post.NonModalNumber (" Y", endY * scale, "0.0000")
   end
   post.Eol()
end



function CheckFeed()
   if(feedRate == 0) then return end
   if(feedRate == oldfeed) then return end
   post.NonModalNumber (" F", feedRate * scale, "0.###")
   oldfeed = feedRate
   post.Eol()
end

function OnPenDown()
   OnRapid2()
   if markerChanged then
      markerChanged = false
      post.Text (" G541\n") --marker head offset
      post.CancelModalNumbers()
      post.Text (" G00")
      if(currentX > 1e17) then currentX = endX end
      if(currentY > 1e17) then currentY = endY end
      post.NonModalNumber (" X", currentX * scale, "0.0000")
      post.NonModalNumber (" Y", currentY * scale, "0.0000")
      post.Eol()
      post.Text(" M08\n") --lower marker head
      post.Text (" G04 P0.5\n") --pause while the head lowers
   end
   if (preheat > 0) then
      post.Text (" G04 P")
      post.Number (preheat,"0.###")
      post.Eol()
   end
      if(toolClass == "PlasmaTool") then
      post.Text (" G23\n")
   else
      if(toolClass == "FlameTool") then
         post.Text (" M04\n")
      else
         if(toolClass == "MarkerTool") then
            post.Text (" M60\n")
         end
      end
   end
   if (pierceDelay > 0) then
      post.Text (" G04 P")
      post.Number (pierceDelay,"0.###")
      post.Eol()
   end
end


function OnPenUp()
   if(toolClass == "PlasmaTool") then
      post.Text (" G25\n")
   else
      if(toolClass == "FlameTool") then
         post.Text (" M05\n")
      else
         if(toolClass == "MarkerTool") then
            post.Text (" M61\n")
         end
      end
   end

   if (endDelay > 0) then
      post.Text (" G04 P")
      post.Number (endDelay,"0.###")
      post.Eol()
   end
end


function OnNewOperation()
   post.Text (" (Operation: ", operationName, ")\n")
end

function OnComment()
  post.Text(" (",commentText,")\n")
end

function OnToolChange()
   if(toolClass == lasttoolClass) then return end
   if(lasttoolClass == "MarkerTool") then
      post.Text(" M09\n") --raise marker head
      post.Text (" G54\n") --plasma/flame head offset
      post.CancelModalNumbers()
      currentX = endX + 1
   end
   if(toolClass == "MarkerTool") then
      markerChanged = true
   end
   lasttoolClass = toolClass
end


function OnNewPart()
   post.Text(" (Part: ",partName,")\n");
end

function OnDrill()
   OnRapid()
   OnPenDown()
   OnPenUp()
end

