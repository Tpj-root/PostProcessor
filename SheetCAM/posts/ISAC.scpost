function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("ISAC thermal cutting post processor\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Modal G-codes and coordinates\n")
   ctrl:AppendText("Comments enclosed with ( and )\n")
   ctrl:AppendText("M03/M05 turn the torch on/off\n")
   ctrl:AppendText("Absolute IJ\n")
end

function OnInit()

   post.SetCommentChars ("{", "[")  --make sure { characters do not appear in system text
   post.TextDirect("%\n")
   post.TextDirect ("{Filename: ", fileName, "\n")
   post.TextDirect ("{Post processor: ", postName, "\n")
   post.TextDirect ("{Date: ", date, "\n")
   post.TextDirect ("{HEADER END\n")
   if(scale == metric) then
      post.Text (" G21 {Units: Metric\n") --metric mode
   else
      post.Text (" G20 {Units: Inches\n") --inch mode
   end
   post.Text (" G53 G90 G91.1 G40\n F1\n S500\n")
   bigArcs = 1 --stitch arc segments together
   minArcSize = 0.05 --arcs smaller than this are converted to moves
end

function OnNewLine()
   post.Text ("N")
   post.Number (lineNumber, "0000")
   lineNumber = lineNumber + 10
end


function OnFinish()
   post.Text (" M05 M30\n")
   post.TextDirect ("[!ENDTHC]\n")
end

function OnRapid()
   if(math.hypot(endX - currentX, endY - currentY) < 0.0001) then return end
   post.ModalText (" G00")
   post.ModalNumber (" X", endX * scale, "0.0000")
   post.ModalNumber (" Y", endY * scale, "0.0000")
   post.Eol()
end

function OnMove()
   if(math.hypot(endX - currentX, endY - currentY) < 0.0001) then return end
   post.ModalText (" G01")
   post.ModalNumber (" X", endX * scale, "0.0000")
   post.ModalNumber (" Y", endY * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.0###")
   post.Eol()
end

function OnArc()
   if(arcAngle <0) then
      post.ModalText (" G03")
   else
      post.ModalText (" G02")
   end
   post.NonModalNumber (" X", endX * scale, "0.0000")
   post.NonModalNumber (" Y", endY * scale, "0.0000")
   post.Text (" I")
   post.Number (arcCentreX * scale, "0.0000")
   post.Text (" J")
   post.Number (arcCentreY * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.0###")
   post.Eol()
end


function OnPenDown()
   if (preheat > 0.001) then
      post.Text (" G04 P")
      post.Number (preheat,"0.###")
      post.Eol()
   end
   post.Text (" M04\n")
   if (pierceDelay > 0.001) then
      post.Text (" G04 P")
      post.Number (pierceDelay,"0.###")
      post.Eol()
   end
end


function OnPenUp()
   post.Text (" M05\n")
   if (endDelay > 0) then
      post.Text (" G04 P")
      post.Number (endDelay,"0.###")
      post.Eol()
   end
end


function OnNewOperation()
   post.Text (" {Operation: ", operationName, "\n")
end

function OnComment()
  post.Text(" {",commentText,"\n")
end

function OnToolChange()
--[[   post.Text (" M06 T")
   post.Number (tool, "0")
   post.ModalNumber(" F",feedRate * scale,"0.0###")]]
   post.Text (" {", toolName, "\n")
end

function OnNewPart()
   post.Text(" {Part: ",partName,"\n");
end

function OnDrill()
   OnRapid()
   OnPenDown()
   endZ = drillZ
   OnMove()
   OnPenUp()
   endZ = safeZ
   OnRapid()
end
