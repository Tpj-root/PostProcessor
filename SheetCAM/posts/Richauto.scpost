function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("Richauto plasma post processor\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Non modal G-codes and coordinates\n")
   ctrl:AppendText("M07/M08 turn the torch on/off\n")
   ctrl:AppendText("Incremental IJ\n")
   ctrl:AppendText("No Z axis\n")
end



--  revision 3/2/07
--  Removed final safety move. This is now done in SheetCam

--   revision 7/10/05
--   Added new arc handling

--   created 14/5/04
--   Based on Plasma1.post



function OnInit()

   post.SetCommentChars ("()", "[]")  --make sure ( and ) characters do not appear in system text
--[[   post.Text (" (Filename: ", fileName, ")\n")
   post.Text (" (Post processor: ", postName, ")\n")
   post.Text (" (Date: ", date, ")\n")
   if(scale == metric) then
      post.Text (" G21 (Units: Metric)\n") --metric mode
   else
      post.Text (" G20 (Units: Inches)\n") --inch mode
   end]]
   post.Text ("G90 G40\nG92 X0 Y0\n")
   bigarcs = 1 --stitch arc segments together
   minArcSize = 0.05 --arcs smaller than this are converted to moves
end

function OnFinish()
   post.Text ("M02\n")
end

function OnRapid()
   if(endX == currentX and endY == currentY) then return end
   post.Text ("G00")
   if(endX < 1e17) then
      post.NonModalNumber (" X", endX * scale, "0.0000")
   end
   if(endY < 1e17) then
      post.NonModalNumber (" Y", endY * scale, "0.0000")
   end
   post.Eol()
end

function OnMove()
   post.Text ("G01")
   post.NonModalNumber (" X", endX * scale, "0.0000")
   post.NonModalNumber (" Y", endY * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.###")
   post.Eol()
end

function OnArc()
   if(arcAngle <0) then
      post.Text ("G03")
   else
      post.Text ("G02")
   end
   post.NonModalNumber (" X", endX * scale, "0.0000")
   post.NonModalNumber (" Y", endY * scale, "0.0000")
--   post.ModalNumber (" Z", endZ * scale, "0.0000")
   post.Text (" I")
   post.Number ((arcCentreX - currentX) * scale, "0.0000")
   post.Text (" J")
   post.Number ((arcCentreY - currentY) * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.0###")
   post.Eol()
end


function OnPenDown()
--[[
   post.ModalText (" G00")
--   post.ModalNumber (" Z", pierceHeight * scale, "0.0000")
   if (preheat > 0.01) then
      post.Text ("\n G04 X")
      post.Number (preheat,"0.###")
      post.Eol()
   end
   post.Text ("\n M50\n")
   if (pierceDelay > 0.01) then
      post.Text (" G04 X")
      post.Number (pierceDelay,"0.###")
      post.Eol()
   end
   ]]
   post.Text ("M07\n")
   
end


function OnPenUp()
--[[   post.Text (" M51\n")
   if (endDelay > 0.01) then
      post.Text (" G04 X")
      post.Number (endDelay,"0.###")
      post.Eol()
   end
   ]]
   post.Text ("M08\n")

end



function OnComment()
  post.Text(" (",commentText,")\n")
end


function OnDrill()
   OnRapid()
   OnPenDown()
   endZ = drillZ
   OnMove()
   OnPenUp()
   endZ = safeZ
   OnRapid()
end
