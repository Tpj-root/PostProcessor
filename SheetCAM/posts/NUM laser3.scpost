function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("Post processor for Ferranti NUM 1060 laser\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Tools 0-99 use O2\n")
   ctrl:AppendText("Tools 100 - 199 use air\n")
   ctrl:AppendText("Tools 200 - 299 use N2\n")
   ctrl:AppendText("Tools 300 - 399 use O2 for pierce, N2 for cutting\n")
   ctrl:AppendText("Uses absolute arcs\n")

end



--   created 7/12/09



function OnInit()
   nolines = true
   lineNumber = 1
   post.Text("START\n%1\n")
   nolines = nil
   post.SetCommentChars ("()", "[]")  --make sure ( and ) characters do not appear in system text
   bigarcs = 1 --stitch arc segments together
   minArcSize = 0.2 --arcs smaller than this are converted to moves

   post.Text(" G53 G90\n")
   post.Text(" G59 X0 Y0\n")
   post.Text(" L1=0 L2=0\n")
   post.Text(" G77 H820\n")
   post.Text(" M135\n M127\n")

end

function OnNewLine()
   if(nolines) then return end
   post.Text ("N")
   post.Number (lineNumber, "000")
   lineNumber = lineNumber + 1
end


function OnFinish()
   post.Text (" M114\n")
   post.Text (" M109\n")
   endX = 0
   endY = 0
   OnRapid()
   post.Text (" M137\n")
   post.Text (" M2\n")
   post.Text ("\19;\n")
end

function OnRapid()
   if(math.hypot(endX - currentX, endY - currentY) < 0.01) then return end
   if(endX >= 1e17) then return end
   post.Text (" M114\n")
   post.Text (" G00")
   post.NonModalNumber (" X", endX * scale, "0.0##")
   post.NonModalNumber (" Y", endY * scale, "0.0##")
   post.Eol()
end

function OnMove()
   if(math.hypot(endX - currentX, endY - currentY) < 0.01) then return end

   post.Text (" G01")
   post.NonModalNumber (" X", endX * scale, "0.0##")
   post.NonModalNumber (" Y", endY * scale, "0.0##")
   post.ModalNumber (" F", feedRate * scale, "0.##")
   post.Eol()
end

function OnArc()
   if(arcAngle <0) then
      post.Text (" G03")
   else
      post.Text (" G02")
   end
   post.NonModalNumber (" X", endX * scale, "0.0##")
   post.NonModalNumber (" Y", endY * scale, "0.0##")
   post.Text (" I")
   post.Number (arcCentreX * scale, "0.0##")
--   post.Number ((arcCentreX - currentX) * scale, "0.0##")
   post.Text (" J")
   post.Number (arcCentreY * scale, "0.0##")
--   post.Number ((arcCentreY - currentY) * scale, "0.0##")
   post.ModalNumber (" F", feedRate * scale, "0.##")
   post.Eol()
end



function OnPenDown()
   post.Text(" M128 E30003=0\n")
   post.Text (" M108\n")
   post.Text(pierceOn)
   post.Text(" M113\n")
   post.Text(" G4 F0.2\n")
   post.Text (" M103\n")
   if (pierceDelay > 0.001) then
      post.Text (" G4 F")
      post.Number (pierceDelay,"0.##")
      post.Eol()
   end
   post.Text(gasOn)
post.Text(" M113\n")
end


function OnPenUp()
   post.Text (" M105\n")
   if (endDelay > 0) then
      post.Text (" G04 F")
      post.Number (endDelay,"0.###")
      post.Eol()
   end
   post.Text (rapidGas)
end

function OnNewPart()
   post.Text(" (Part: ",partName,")\n");
end

function OnNewOperation()
   post.Text (" (Operation: ", operationName, ")\n")
   if (feedRate <= 0) then
      post.Warning("WARNING: Feed rate is zero")
   end
end

function OnToolChange()
   if(tool <100) then
      gasOn = " M110\n" -- Use O2
      pierceOn = " M110\n" -- Use O2
      rapidGas = "" --same as cutting gas
   else
      if(tool < 200) then
         gasOn = " M111\n" -- Use air
         pierceOn = " M111\n" -- Use air
         rapidGas = "" --same as cutting gas
      else
         if(tool < 300) then
            gasOn = " M112\n" --use N2
            pierceOn = " M112\n" --use N2
            rapidGas = "" --same as cutting gas
         else
            if(tool < 400) then
               gasOn = " M110\n" --use O2
               pierceOn = " M112\n" --use N2
               rapidGas = "" --same as cutting gas
            else
               gasOn = " M110\n" --use O2
               pierceOn = " M110\n" --use O2
               rapidGas = " M111\n" -- Use air
            end
         end
      end
   end
end
