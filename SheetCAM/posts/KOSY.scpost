function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("Minimum G-code post processor\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Min spec g-code for compatibility with as many controllers as possible\n")
   ctrl:AppendText("Non modal G-codes\n")
   ctrl:AppendText("Modal coordinates\n")
   ctrl:AppendText("No comments\n")
   ctrl:AppendText("Incremental IJ\n")
   ctrl:AppendText("G-codes used:\n")
   ctrl:AppendText("G00,G01,G02,G03,G74,G90\n")
   ctrl:AppendText("M-codes used:\n")
   ctrl:AppendText("M10\n")
end

function OnInit()
   post.SetCommentChars ("()", "[]")  --make sure ( and ) characters do not appear in system text
   post.Text ("G90\n")
   post.Text ("G74\n")
   bigArcs = 1 --stitch arc segments together
   minArcSize = 0.05 --arcs smaller than this are converted to moves
end

function OnNewLine()
--   post.Text ("N")
--   post.Number (lineNumber, "000")
--   lineNumber = lineNumber + 10
end


function OnFinish()
   post.Text ("G77\n")
end

function OnRapid()
   post.Text ("G00")
   post.ModalNumber (" X", endX * scale, "0.000")
   post.ModalNumber (" Y", endY * scale, "0.000")
   post.ModalNumber (" Z", (endZ + toolOffset) * scale, "0.000")
   post.Eol()
end

function OnMove()
   post.Text ("G01")
   post.NonModalNumber (" X", endX * scale, "0.000")
   post.NonModalNumber (" Y", endY * scale, "0.000")
   post.ModalNumber (" Z", (endZ + toolOffset) * scale, "0.000")
   post.ModalNumber (" F", feedRate * scale, "0.###")
    post.Eol()
end

function OnArc()
   if(arcAngle <0) then
      post.Text ("G03")
   else
      post.Text ("G02")
   end
   post.NonModalNumber (" X", endX * scale, "0.000")
   post.NonModalNumber (" Y", endY * scale, "0.000")
   post.ModalNumber (" Z", (endZ + toolOffset) * scale, "0.000")
   post.Text (" I")
   post.Number ((arcCentreX - currentX) * scale, "0.000")
   post.Text (" J")
   post.Number ((arcCentreY - currentY) * scale, "0.000")
   post.ModalNumber (" F", feedRate * scale, "0.0###")
   post.Eol()
end


function OnSpindleCW()
   post.Text ("M10 o6.1\n")
   post.Text ("M10 o5.1\n")
   post.Eol()
end


function OnSpindleOff()
   post.Text ("M10 o6.0\n")
   post.Text ("M10 o5.0\n")
end


function OnNewOperation()
   if (plungeRate <= 0) then
      post.Warning("WARNING: Plunge rate is zero")
   end
   if (feedRate <= 0) then
      post.Warning("WARNING: Feed rate is zero")
   end
end

function OnToolChange()
--   post.Text ("M06 T")
--   post.Number (tool)
--   post.Eol()
end

function OnNewPart()
end


function OnFloodOn()
--   post.Text(" M08\n")
end

function OnMistOn()
--   post.Text(" M07\n")
end

function OnCoolantOff()
--   post.Text(" M09\n")
end

function OnDrill()
   OnRapid()
   depth = drillStart
   buffer = 0.5
   if(drillRetract < buffer) then
     buffer = drillRetract
  end
   while depth > drillZ do
      endZ = depth + buffer
      OnRapid()
      depth = depth - drillPeck
      if (depth < drillZ) then
         depth = drillZ
      end
      endZ = depth
      OnMove()
      if (depth > drillZ) then --retract if we need to take another bite
         endZ = endZ + drillRetract
         if (endZ > safeZ) then
            endZ = safeZ
         end
         OnRapid()
      end
   end
   if (endZ < safeZ) then
      endZ = safeZ
      OnRapid()
   end
end
