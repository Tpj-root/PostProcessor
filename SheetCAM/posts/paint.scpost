function OnAbout(event)
   ctrl = event:GetTextCtrl()
   ctrl:AppendText("Mach3 post processor\n")
   ctrl:AppendText("\n")
   ctrl:AppendText("Non modal G-codes\n")
   ctrl:AppendText("Modal coordinates\n")
   ctrl:AppendText("Comments enclosed with ( and )\n")
   ctrl:AppendText("Incremental IJ\n")
   ctrl:AppendText("uses G43 tool length offsets\n")
end


--  revision 3/2/07
--  Removed final safety move. This is now done in SheetCam

--  revision 25/5/06
--  Revised rigid tapping spindle on/off sequencing

--  revision 11/5/06
--  Revised rigid tapping

--  revision 4/5/06
--  Revised tapping cycles

--  revision 2/5/06
--  Added tapping cycle

--   revision 14/11/05
--   Fixed circles for Mach2/earlier versions of Mach3

--   revision 20/10/04
--   added tool length offsets

--   revision 25/10/04
--   added G90.1 incremental IJ mode

--   revision 28/7/04
--   Added drill start depth

--   revision 19/7/04
--   added drill cycle

--   revision 28/6/04
--   Replaced startx,y,z with currentx,y,z

--   Revision 28/5/04
--   Unbodged first rapid move - main app is fixed now
--   Added plunge,feed,spindle speed warnings

--   Revision 25/5/04
--   fixed feed rate problem and bodged first rapid move

--   Revision 18/5/04
--   Added Metric + Inch variables and easy inch/metric swapping
--   changed to fixed number of trailing zeros

--   Created 11/5/2004

function OnInit()
   post.SetCommentChars ("()", "[]")  --make sure ( and ) characters do not appear in system text
   post.Text (" (Filename: ", fileName, ")\n")
   post.Text (" (Post processor: ", postName, ")\n")
   post.Text(" (Date:",date," Time:",time,")\n")
   if(scale == metric) then
      post.Text (" G21 (Units: Metric)\n") --metric mode
   else
      post.Text (" G20 (Units: Inches)\n") --inch mode
   end
   post.Text (" G40 G90 G91.1\n F1\n")
   bigArcs = 1 --stitch arc segments together
   minArcSize = 0.05 --arcs smaller than this are converted to moves
   post.Text(" M03\n")
end

function OnNewLine()
   post.Text ("N")
   post.Number (lineNumber, "0000")
   lineNumber = lineNumber + 10
end


function OnFinish()
   post.Text (" M05 M30\n")
end


function OnRapid()
   post.ModalText (" G00")
   post.ModalNumber (" X", endX * scale, "0.0000")
   post.ModalNumber (" Y", endY * scale, "0.0000")
   post.ModalNumber (" Z", (endZ + toolOffset) * scale, "0.0000")
   post.Eol()
end

function OnMove()
   post.ModalText (" G01")
   post.ModalNumber (" X", endX * scale, "0.0000")
   post.ModalNumber (" Y", endY * scale, "0.0000")
   post.ModalNumber (" Z", (endZ + toolOffset) * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.0###")
   post.Eol()
end

function OnArc()
   if(arcAngle <0) then
      post.ModalText (" G03")
   else
      post.ModalText (" G02")
   end
   post.NonModalNumber (" X", endX * scale, "0.0000")
   post.NonModalNumber (" Y", endY * scale, "0.0000")
   post.ModalNumber (" Z", (endZ + toolOffset) * scale, "0.0000")
   post.Text (" I")
   post.Number ((arcCentreX - currentX) * scale, "0.0000")
   post.Text (" J")
   post.Number ((arcCentreY - currentY) * scale, "0.0000")
   post.ModalNumber (" F", feedRate * scale, "0.0###")
   post.Eol()
end


function OnSpindleCW()
   post.Text (" M08")
   post.Eol()
   if (pierceDelay > 0.001) then
      post.Text (" G04 P")
      post.Number (pierceDelay,"0.###")
      post.Eol()
   end
end

function OnSpindleCCW()
   post.Text (" M04")
   post.Eol()
end

function OnSpindleOff()
   post.Text (" M09\n")
end

function OnPenUp()
   if (endDelay > 0.001) then
      post.Text (" G04 P")
      post.Number (endDelay,"0.###")
      post.Eol()
   end
end

function OnNewOperation()
   post.Text (" (Operation: ", operationName, ")\n")
end

function OnComment()
  post.Text(" (",commentText,")\n")
end

function OnToolChange()
   post.Text (" (", toolName, ")\n")
   post.Text (" T")
   post.Number (tool, "0")
   post.Text (" M06\n  G43 H")
   post.Number (tool, "0")
   post.Eol()
   if (plungeRate <= 0) then
      post.Warning("WARNING: Plunge rate is zero")
   end
   if (feedRate <= 0) then
      post.Warning("WARNING: Feed rate is zero")
   end
end

function OnSpindleChanged()
   post.ModalNumber (" S", spindleSpeed, "0.##")
   if (spindleSpeed <= 0) then
      post.Warning("WARNING: Spindle speed is zero")
   end
end

function OnNewPart()
   post.Text(" (Part: ",partName,")\n");
end


function OnFloodOn()
   post.Text(" M08 (Flood coolant on)\n")
end

function OnMistOn()
   post.Text(" M07 (Mist coolant on)\n")
end

function OnCoolantOff()
   post.Text(" M09 (Coolant off)\n")
end

